apply plugin: getModelType()
apply plugin: "kotlin-android"
apply plugin: 'kotlin-kapt'

String getModelType() {
    if (rootProject.ext.isRunModel) {
        return "com.android.application"
    } else {
        return "com.android.library"
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        if (rootProject.ext.isRunModel) {
            applicationId "com.model.splash"
        }
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }


    buildTypes {
        prod {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'IS_RUN_MODEL', "${rootProject.ext.isRunModel}"
        }
        beta {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'IS_RUN_MODEL', "${rootProject.ext.isRunModel}"
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'IS_RUN_MODEL', "${rootProject.ext.isRunModel}"
        }
    }

    sourceSets {
        main {
            if (rootProject.ext.isRunModel) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }


    viewBinding {
        enabled = true
    }
}

//ARouter 配置
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    //Jetpack
    implementation rootProject.ext.lib_coroutines_android
    implementation rootProject.ext.lib_lifecycle_runtime_ktx
    implementation rootProject.ext.lib_lifecycle_livedata_ktx
    implementation rootProject.ext.lib_lifecycle_viewmodel_ktx

    //公共基础包
    implementation project(":library:lib-common")
    //网络请求
    implementation project(":library:lib-network")
    //ARouter
    implementation(rootProject.ext.lib_arouter_api) {
        //过滤掉v4包里面的东西 防止和AndroidX冲突
        exclude group: 'com.android.support', module: 'support-v4'
    }
    kapt rootProject.ext.lib_arouter_compiler
}